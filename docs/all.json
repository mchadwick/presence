{"shell":true,"revision":"af0aff207064b5a6aa0d27ecdc6fcaaea0b7d7da","objects":[{"type":"protocol","source":"lib/presence.ex:2","object_type":"ModuleObject","moduledoc":"The `Presence` protocol is responsible for\nchecking the presence of a value.\n\nThe functions required to be implemented are\n`is_blank/1`, `is_present/1` and `presence/1`.\nThese functions are not automatically imported\nby `Kernel`.\n\nCurrently, these modules implements `Presence` protocol.\n\n  - `Atom`\n  - `BitString`\n  - `List`\n  - `Map`\n  - `Tuple`\n\n","module":"Elixir.Presence","id":"Presence"},{"type":"impl","source":"lib/presence.ex:131","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.Presence.Atom","id":"Presence.Atom"},{"type":"impl","source":"lib/presence.ex:147","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.Presence.BitString","id":"Presence.BitString"},{"type":"impl","source":"lib/presence.ex:159","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.Presence.List","id":"Presence.List"},{"type":"impl","source":"lib/presence.ex:175","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.Presence.Map","id":"Presence.Map"},{"type":"impl","source":"lib/presence.ex:188","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.Presence.Tuple","id":"Presence.Tuple"},{"type":"def","source":"lib/presence.ex:1","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__protocol__","module_id":"Presence","id":"__protocol__/1","doc":false,"arity":1},{"type":"def","source":"lib/presence.ex:1","signature":[["data",[],null]],"object_type":"FunctionObject","name":"impl_for","module_id":"Presence","id":"impl_for/1","doc":false,"arity":1},{"type":"def","source":"lib/presence.ex:1","signature":[["data",[],null]],"object_type":"FunctionObject","name":"impl_for!","module_id":"Presence","id":"impl_for!/1","doc":false,"arity":1},{"type":"def","source":"lib/presence.ex:21","signature":[["value",[],null]],"object_type":"FunctionObject","name":"is_blank","module_id":"Presence","id":"is_blank/1","doc":"A value is blank if it's nil, false, empty, or a whitespace string.\n\nFor example\n  - `nil`\n  - `false`\n  - `[]`\n  - `%{}`\n  - `{}`\n  - `''`\n  - `'   '`\n\nare all blank.\n\nThis simplifies\n    !address || Enum.empty?(address)\nto\n    is_blank(address)\n\n## Examples\n### Atom\n`nil` is blank:\n\n    iex> is_blank(nil)\n    true\n\n`false` is blank:\n\n    iex> is_blank(false)\n    true\n\n`:false` atom is blank:\n\n    iex> is_blank(:false)\n    true\n\n### List\n`[]` is blank:\n\n    iex> is_blank([])\n    true\n\n`' '` is blank:\n\n    iex> is_blank(' ')\n    true\n\n### Map\n`%{}` is blank:\n\n    iex> is_blank(%{})\n    true\n\n### String\nA string is blank if it's empty or contains whitespaces only:\n\n    iex> is_blank(\"\")\n    true\n\n    iex> is_blank(\"   \")\n    true\n\n    iex> is_blank(\"\\t\\n\\r\")\n    true\n\n    iex> is_blank(\" blah \")\n    false\n\nUnicode whitespace is supported:\n\n    iex> is_blank(\"\\u00a0\")\n    true\n\n### Tuple\n`{}` is blank:\n\n    iex> is_blank({})\n    true\n","arity":1},{"type":"def","source":"lib/presence.ex:102","signature":[["value",[],null]],"object_type":"FunctionObject","name":"is_present","module_id":"Presence","id":"is_present/1","doc":"A value is present if it's not blank.\n","arity":1},{"type":"def","source":"lib/presence.ex:107","signature":[["value",[],null]],"object_type":"FunctionObject","name":"presence","module_id":"Presence","id":"presence/1","doc":"Returns the `value` if it's present otherwise returns `nil`.\n\n    presence(value)\n\nis equivalent to\n\n    is_present(value) ? value : nil\n\nFor example, something like\n\n    if is_present(state), do: state = state\n    if is_present(country), do: country = country\n\n    region  = state || country || 'US'\n\nbecomes\n\n    region = presence(state) || presence(country) || 'US'\n\n","arity":1},{"type":"def","source":"lib/presence.ex:131","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"Presence.Atom","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/presence.ex:132","signature":[["atom",[],null]],"object_type":"FunctionObject","name":"is_blank","module_id":"Presence.Atom","id":"is_blank/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:140","signature":[["atom",[],null]],"object_type":"FunctionObject","name":"is_present","module_id":"Presence.Atom","id":"is_present/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:142","signature":[["atom",[],null]],"object_type":"FunctionObject","name":"presence","module_id":"Presence.Atom","id":"presence/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:147","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"Presence.BitString","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/presence.ex:148","signature":[["string",[],null]],"object_type":"FunctionObject","name":"is_blank","module_id":"Presence.BitString","id":"is_blank/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:152","signature":[["string",[],null]],"object_type":"FunctionObject","name":"is_present","module_id":"Presence.BitString","id":"is_present/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:154","signature":[["string",[],null]],"object_type":"FunctionObject","name":"presence","module_id":"Presence.BitString","id":"presence/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:159","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"Presence.List","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/presence.ex:160","signature":[["charlist",[],null]],"object_type":"FunctionObject","name":"is_blank","module_id":"Presence.List","id":"is_blank/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:168","signature":[["charlist",[],null]],"object_type":"FunctionObject","name":"is_present","module_id":"Presence.List","id":"is_present/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:170","signature":[["charlist",[],null]],"object_type":"FunctionObject","name":"presence","module_id":"Presence.List","id":"presence/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:175","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"Presence.Map","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/presence.ex:176","signature":[["map",[],null]],"object_type":"FunctionObject","name":"is_blank","module_id":"Presence.Map","id":"is_blank/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:181","signature":[["map",[],null]],"object_type":"FunctionObject","name":"is_present","module_id":"Presence.Map","id":"is_present/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:183","signature":[["map",[],null]],"object_type":"FunctionObject","name":"presence","module_id":"Presence.Map","id":"presence/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:188","signature":[["atom",[],"Elixir"]],"object_type":"FunctionObject","name":"__impl__","module_id":"Presence.Tuple","id":"__impl__/1","doc":false,"arity":1},{"type":"def","source":"lib/presence.ex:189","signature":[["tuple",[],null]],"object_type":"FunctionObject","name":"is_blank","module_id":"Presence.Tuple","id":"is_blank/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:194","signature":[["tuple",[],null]],"object_type":"FunctionObject","name":"is_present","module_id":"Presence.Tuple","id":"is_present/1","doc":null,"arity":1},{"type":"def","source":"lib/presence.ex:196","signature":[["tuple",[],null]],"object_type":"FunctionObject","name":"presence","module_id":"Presence.Tuple","id":"presence/1","doc":null,"arity":1}],"language":"elixir","git_repo_url":"https://github.com/wnuqui/presence.git","client_version":"0.5.6","client_name":"inch_ex","branch_name":"master","args":[]}